{
  "fileName": "WalletServer.scala",
  "filePath": "wallet/src/main/scala/org/alephium/wallet/web/WalletServer.scala",
  "url": "https://github.com/alephium/alephium/wallet/src/main/scala/org/alephium/wallet/web/WalletServer.scala",
  "summary": "This file defines a `WalletServer` class and an `object` that converts `WalletError` to `ApiError`. The `WalletServer` class extends `WalletEndpointsLogic` and `WalletDocumentation` and uses `VertxFutureServerInterpreter` to define routes for various wallet-related operations. \n\nThe `WalletServer` class takes in a `WalletService` instance, a `Duration` object, and an optional `ApiKey` object. It also takes in an implicit `GroupConfig` object and an `ExecutionContext`. The `WalletEndpointsLogic` trait defines methods for various wallet operations, and the `WalletDocumentation` trait provides documentation for these methods. The `VertxFutureServerInterpreter` trait provides methods to convert the defined routes to Vert.x `Route` objects.\n\nThe `WalletServer` class defines a `routes` `AVector` that maps each defined method to a `Route` object using the `route` method provided by `VertxFutureServerInterpreter`. It also defines a `docsRoute` that provides Swagger UI documentation for the defined routes.\n\nThe `WalletServer` class is used to define the wallet-related routes for the Alephium project. The `WalletError` to `ApiError` conversion provided by the `WalletServer` object is used to convert wallet-related errors to API errors that can be returned to the user. \n\nExample usage:\n```scala\nval walletService = new WalletService()\nval blockflowFetchMaxAge = Duration.ofMinutes(5)\nval maybeApiKey = Some(ApiKey(\"myApiKey\"))\nimplicit val groupConfig = GroupConfig()\nimplicit val executionContext = ExecutionContext.global\n\nval walletServer = new WalletServer(walletService, blockflowFetchMaxAge, maybeApiKey)\n\n// Use the defined routes to handle wallet-related requests\nval router = Router.router(vertx)\nwalletServer.routes.foreach(_.apply(router))\n```",
  "questions": "1. What is the purpose of this code?\n   - This code defines a `WalletServer` class that extends `WalletEndpointsLogic` and `WalletDocumentation`, and contains a list of routes for various wallet-related operations. It also includes a `toApiError` function that maps `WalletError` instances to `ApiError` instances.\n2. What external libraries or dependencies does this code use?\n   - This code uses several external libraries, including `io.vertx.ext.web`, `sttp`, and `sttp.tapir.server.vertx.VertxFutureServerInterpreter`. It also imports several classes and objects from the `org.alephium` package.\n3. What license is this code released under?\n   - This code is released under the GNU Lesser General Public License, version 3 or later."
}