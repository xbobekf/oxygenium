{
  "fileName": "BuildExecuteScriptTx.scala",
  "filePath": "api/src/main/scala/org/alephium/api/model/BuildExecuteScriptTx.scala",
  "url": "https://github.com/alephium/alephium/api/src/main/scala/org/alephium/api/model/BuildExecuteScriptTx.scala",
  "summary": "The `BuildExecuteScriptTx` class is a model used in the Alephium project to represent a transaction that executes a smart contract script. It contains various parameters that are used to build the transaction, including the public key of the sender (`fromPublicKey`), the bytecode of the script (`bytecode`), the amount of Alph tokens to transfer (`attoAlphAmount`), any additional tokens to transfer (`tokens`), the amount of gas to use (`gasAmount`), the price of gas (`gasPrice`), and the target block hash (`targetBlockHash`).\n\nThis class is used in conjunction with other classes and methods in the project to build and execute transactions on the Alephium blockchain. For example, a developer could use this class to build a transaction that executes a custom smart contract on the blockchain, transferring tokens and interacting with other contracts as needed.\n\nHere is an example of how this class might be used in code:\n\n```\nval tx = BuildExecuteScriptTx(\n  fromPublicKey = ByteString(\"mypublickey\"),\n  bytecode = ByteString(\"myscriptbytecode\"),\n  attoAlphAmount = Some(Amount(100000000000000L)),\n  tokens = Some(AVector(Token(\"mytoken\", 1000L))),\n  gasAmount = Some(GasBox(100000L)),\n  gasPrice = Some(GasPrice(100L)),\n  targetBlockHash = Some(BlockHash(\"mytargetblockhash\"))\n)\n\n// Send the transaction to the network\nval result = sendTransaction(tx)\n```\n\nIn this example, a new `BuildExecuteScriptTx` object is created with the necessary parameters to execute a custom smart contract. The transaction is then sent to the network using the `sendTransaction` method (not shown).",
  "questions": "1. What is the purpose of the `BuildExecuteScriptTx` class?\n- The `BuildExecuteScriptTx` class is used to build and execute a transaction that contains a script bytecode.\n\n2. What are the optional parameters that can be passed to the `BuildExecuteScriptTx` constructor?\n- The optional parameters that can be passed to the `BuildExecuteScriptTx` constructor are `fromPublicKeyType`, `attoAlphAmount`, `tokens`, `gasAmount`, `gasPrice`, and `targetBlockHash`.\n\n3. What other classes or packages are imported in this file?\n- This file imports classes from `akka.util.ByteString`, `org.alephium.protocol.model.BlockHash`, `org.alephium.protocol.vm.{GasBox, GasPrice}`, and `org.alephium.util.AVector`."
}